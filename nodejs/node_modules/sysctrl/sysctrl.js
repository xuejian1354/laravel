'use strict'
var sysctrl = require('bindings')('sysctrl.node');

function ctrl(info, callback) {

	const PTZ_CMD_STOP = 0;			//停止
	const PTZ_CMD_LEFT = 1;			//左
	const PTZ_CMD_RIGHT = 2;		//右
	const PTZ_CMD_UP = 3;			//上
	const PTZ_CMD_DOWN = 4;			//下
	const PTZ_CMD_LEFT_UP = 5;		//左上
	const PTZ_CMD_LEFT_DOWN = 6;	//左下
	const PTZ_CMD_RIGHT_UP = 7;		//右上
	const PTZ_CMD_RIGHT_DOWN = 8;	//右下
	const PTZ_CMD_NEAR = 9;			//拉近
	const PTZ_CMD_FAR = 10;			//调远
	const PTZ_CMD_ZOOM_OUT = 11;	//缩小
	const PTZ_CMD_ZOOM_IN = 12;		//放大
	const PTZ_CMD_IRIS_OPEN = 13;	//开启光圈
	const PTZ_CMD_IRIS_CLOSE = 14;	//关闭光圈


	var userId = -1;
	var playHandle = -1;
	var ipaddr = info.ipaddr;

	this.reflush = function(info, callback) {
		if(ipaddr != info.ipaddr) {
			ipaddr = info.ipaddr;
			sysctrl.netcamclose(userId, playHandle);
			sysctrl.netcamconn(info, function(user, play) {
				userId = user;
				playHandle = play;
				if(typeof callback == 'function') {
					callback(userId, playHandle);
				}
			});
		}
		else {
			callback(userId, playHandle);
		}
	};

	this.netcamctrl = function(flag) {
		var cmd = PTZ_CMD_STOP;
		switch(flag) {
		case 'left': cmd = PTZ_CMD_LEFT; break;
		case 'up': cmd = PTZ_CMD_UP; break;
		case 'down': cmd = PTZ_CMD_DOWN; break;
		case 'right': cmd = PTZ_CMD_RIGHT; break;
		case 'stop': cmd = PTZ_CMD_STOP; break;
		case 'far': cmd = PTZ_CMD_ZOOM_IN; break;
		case 'near': cmd = PTZ_CMD_ZOOM_OUT; break;
		}
		sysctrl.netcamctrl(playHandle, cmd);
	};

	this.netcamclose = function() {
		if(playHandle > 0) {
			sysctrl.netcamctrl(playHandle, PTZ_CMD_STOP);
		}
		sysctrl.netcamclose(userId, playHandle);
	};

	sysctrl.netcamconn(info, function(user, play) {
		userId = user;
		playHandle = play;

		if(typeof callback == 'function') {
			callback(userId, playHandle);
		}
	});
}

module.exports = ctrl;